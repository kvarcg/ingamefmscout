<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	
	<!-- @ Background -->
    <LinearGradientBrush x:Key="MenuBarBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF3C7190" Offset="0"/>
        <GradientStop Color="#FF0C354F" Offset="1"/>
    </LinearGradientBrush>
	
	<Style x:Key="MenuBarStyle" TargetType="Menu">
		<Setter Property="Background" Value="{DynamicResource MenuBarBackground}"/>
		<Setter Property="BorderBrush" Value="#FF3D4144"/>
		<Setter Property="BorderThickness" Value="0,0,0,1"/>
	</Style>
		
	<LinearGradientBrush x:Key="MenuItemBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF355B72" Offset="0"/>
		<GradientStop Color="#FF355B72" Offset="1"/>
    </LinearGradientBrush>
	
	<LinearGradientBrush x:Key="MenuItemTextGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF3C7190" Offset="0"/>
        <GradientStop Color="#FF0C354F" Offset="1"/>
    </LinearGradientBrush>
	
	<LinearGradientBrush x:Key="MenuItemForeground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFF6F6F6" Offset="0"/>
        <GradientStop Color="#FFF6F6F6" Offset="1"/>
    </LinearGradientBrush>
	
	<LinearGradientBrush x:Key="MenuItemSelectedGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#55959595" Offset="0"/>
        <GradientStop Color="#55959595" Offset="1"/>
    </LinearGradientBrush>
	
	<LinearGradientBrush x:Key="MenuItemSelectedForeground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFBEB54C" Offset="0"/>
        <GradientStop Color="#FFBEB54C" Offset="1"/>
    </LinearGradientBrush>

    <!-- @ MouseOver -->
    <LinearGradientBrush x:Key="MenuItemMouseOverGradientBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#909BB1C5" Offset="0"/>
		<GradientStop Color="#509BB1C5" Offset="0.25"/>
		<GradientStop Color="#289BB1C5" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuItemMouseOverGradientBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#449BB1C5" Offset="0"/>
        <GradientStop Color="#449BB1C5" Offset="1"/>
    </LinearGradientBrush>
	
	<!-- @ MouseOver -->
    <LinearGradientBrush x:Key="MenuItemPressedGradientBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="#289BB1C5" Offset="0"/>
		<GradientStop Color="#509BB1C5" Offset="0.75"/>
		<GradientStop Color="#909BB1C5" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuItemPressedGradientBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#889BB1C5" Offset="0"/>
        <GradientStop Color="#889BB1C5" Offset="1"/>
    </LinearGradientBrush>
	
	<LinearGradientBrush x:Key="MenuItemSelectionFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#34C5EBFF" Offset="0"/>
		<GradientStop Color="#3481D8FF" Offset="1"/>
	</LinearGradientBrush>
	
	<Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
			<Border x:Name="Bd" 
			SnapsToDevicePixels="true" 				
			Background="{TemplateBinding Background}" 
				BorderBrush="{TemplateBinding BorderBrush}" 
				BorderThickness="{TemplateBinding BorderThickness}"
				Margin="2,1,2,1"
				Padding="4,1,4,1"
				CornerRadius="4,4,4,4">
				<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" 
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
					ContentSource="Icon" Grid.Column="0"/>
					<ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
					ContentSource="Header" RecognizesAccessKey="True" Grid.Column="1"/>
					<TextBlock x:Name="InputGesture" Margin="4,0,0,0" 
					FontWeight="Bold" FontSize="9" VerticalAlignment="Center"
					Opacity="0.6"
					Text="{TemplateBinding InputGestureText}" Grid.Column="2"/>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="InputGestureText" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="InputGesture" Value="Collapsed"/>
				<Setter Property="Margin" TargetName="InputGesture" Value="0,0,0,0"/>
			</Trigger>				
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuItemForeground}"/>
            </Trigger>				
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Background" TargetName="Bd" Value="{StaticResource MenuItemSelectedGradientBrush}"/>
				<Setter Property="Foreground" Value="{StaticResource MenuItemSelectedForeground}"/>
				<Setter Property="Opacity" TargetName="InputGesture" Value="0.8"/>
				<Setter Property="Cursor" Value="Hand"/>
			</Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}"/>
            </Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

	<Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
		<Setter Property="ClickMode" Value="Hover"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<DockPanel SnapsToDevicePixels="true" Background="Transparent">
						<Rectangle x:Name="R1" Fill="Transparent" Width="1" DockPanel.Dock="Right"/>
						<Rectangle x:Name="B1" Fill="Transparent" Height="1" DockPanel.Dock="Bottom"/>
						<Rectangle x:Name="L1" Fill="Transparent" Width="1" DockPanel.Dock="Left"/>
						<Rectangle x:Name="T1" Fill="Transparent" Height="1" DockPanel.Dock="Top"/>
						<ContentPresenter x:Name="ContentContainer" HorizontalAlignment="Center" Margin="2,2,2,2" VerticalAlignment="Center"/>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter Property="Fill" TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter Property="Fill" TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter Property="Fill" TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
	<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border Grid.Column="0" Grid.Row="1">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
						</Border>
						<RepeatButton Style="{StaticResource MenuScrollButton}" Focusable="false" Command="{x:Static ScrollBar.LineUpCommand}" 
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Grid.Row="0">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource UpArrow}"/>
						</RepeatButton>
						<RepeatButton Style="{StaticResource MenuScrollButton}" Focusable="false" Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Grid.Row="2">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" Data="{StaticResource DownArrow}"/>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
		<Border Background="{StaticResource MenuItemTextGradientBrush}"
                BorderThickness="1"
				CornerRadius="2,2,4,4"
				Margin="0,2,0,0"                           
                BorderBrush="{StaticResource MenuItemBorderBrush}">
			<Grid>
				<Rectangle Fill="#00F1F1F1" RadiusX="2" RadiusY="2" HorizontalAlignment="Left" Margin="2" Width="18"/>
				<ContentPresenter Margin="1,0" Grid.ColumnSpan="2"/>
			</Grid>
		</Border>
	</ControlTemplate>
	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle x:Name="Bg" 
			Fill="{TemplateBinding Background}" 
			Stroke="{TemplateBinding BorderBrush}" 
			StrokeThickness="1" 
			RadiusX="1" RadiusY="1" Margin="1"/>
			<DockPanel>
				<ContentPresenter x:Name="Icon" Margin="4,0,6,0" 
				VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
				ContentSource="Icon"/>
				<ContentPresenter Margin="{TemplateBinding Padding}" 
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
				HorizontalAlignment="Center" VerticalAlignment="Center"
				ContentSource="Header" RecognizesAccessKey="True"/>
			</DockPanel>
			<Popup x:Name="PART_Popup" AllowsTransparency="true" 
			HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
			Placement="Bottom" PopupAnimation="Fade" 
			VerticalOffset="-1" Focusable="false">
					<ContentControl x:Name="SubMenuBorder" IsTabStop="false" 
					Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, 
					TypeInTargetAssembly={x:Type FrameworkElement}}}">
						<ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, 
						TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
							<ItemsPresenter Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							Grid.IsSharedSizeScope="true" 
							KeyboardNavigation.DirectionalNavigation="Cycle" 
							KeyboardNavigation.TabNavigation="Cycle"/>
						</ScrollViewer>
					</ContentControl>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
				<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
			</Trigger>-->
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Stroke" TargetName="Bg" Value="{StaticResource MenuItemMouseOverGradientBorder}"/>
				<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemMouseOverGradientBrush}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="true">
				<Setter Property="Stroke" TargetName="Bg" Value="{StaticResource MenuItemPressedGradientBorder}"/>
				<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedGradientBrush}"/>
			</Trigger>
			<Trigger Property="IsSubmenuOpen" Value="true">
				<Setter Property="Stroke" TargetName="Bg" Value="{StaticResource MenuItemPressedGradientBorder}"/>
				<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedGradientBrush}"/>
			</Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuItemForeground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource DisabledForeground}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle x:Name="OuterBorder" RadiusX="2" RadiusY="2"/>
			<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Margin="1"/>
			<Rectangle x:Name="InnerBorder" Margin="2"/>
			<DockPanel>
				<ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Icon"/>
				<Path x:Name="GlyphPanel" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" VerticalAlignment="Center" Visibility="Collapsed" Data="{StaticResource Checkmark}"/>
				<ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
			</DockPanel>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
				<Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
				<Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="true">
				<Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
				<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedGradientBrush}"/>
				<Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="#FF9A9A9A"/>
				<Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
	<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
			<Rectangle x:Name="InnerBorder" Stroke="Transparent" StrokeThickness="1" RadiusX="2" RadiusY="2" Margin="1"/>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
					<ColumnDefinition Width="4"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="37"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
					<ColumnDefinition Width="17"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Icon"/>
				<Border x:Name="GlyphPanel" Margin="1" Width="22" Height="22" Visibility="Hidden" Background="#E6EFF4" BorderBrush="#CDD3E6" BorderThickness="1" CornerRadius="3">
					<Path x:Name="Glyph" Fill="#0C12A1" FlowDirection="LeftToRight" Width="9" Height="11" Data="{StaticResource Checkmark}"/>
				</Border>
				<ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" Grid.Column="2"/>
				<TextBlock Margin="{TemplateBinding Padding}" Visibility="Collapsed" Text="{TemplateBinding InputGestureText}" Grid.Column="4"/>
				<Path Fill="{TemplateBinding Foreground}" Margin="4,0,0,0" VerticalAlignment="Center" Grid.Column="5" Data="{StaticResource RightArrow}"/>
			</Grid>
			<Popup x:Name="PART_Popup" AllowsTransparency="true" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3" Focusable="false">
					<ContentControl x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
						<ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
							<ItemsPresenter Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
						</ScrollViewer>
					</ContentControl>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Stroke" TargetName="InnerBorder" Value="#D1DBF4FF"/>
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
			</Trigger>
			<!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
				<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
			</Trigger>-->
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemSelectionFill}"/>
				<Setter Property="Stroke" TargetName="Bg" Value="#8571CBF1"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="#FF9A9A9A"/>
				<Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
				<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
				<Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="MenuItem" TargetType="{x:Type MenuItem}">
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Trebuchet MS" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="MinHeight" Value="10"/>		
		<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Padding" Value="7,6,8,4"/>
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Padding" Value="7,2,8,3"/>
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Padding" Value="2,3,2,3"/>
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Padding" Value="0,3,0,2"/>
				<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>	

</ResourceDictionary>