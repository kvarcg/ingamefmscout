<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- #Brushes -->
    <SolidColorBrush x:Key="DataGridBackgroundBrush" Color="#FF363A3D" />
    <SolidColorBrush x:Key="DataGridBorderBrush" Color="#FF363A3D" />

    <LinearGradientBrush x:Key="DataGridHeaderBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF282B2D" Offset="0"/>
		<GradientStop Color="#FF282B2D" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DataGridHeaderBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF282B2D" Offset="0" />
        <GradientStop Color="#FF282B2D" Offset="1" />
    </LinearGradientBrush>
	
    <LinearGradientBrush x:Key="DataGridHeaderMouseOverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF435C6E" Offset="0"/>
        <GradientStop Color="#FF435C6E" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DataGridHeaderMouseOverBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF435C6E" Offset="0"/>
        <GradientStop Color="#FF435C6E" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DataGridHeaderSortedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF608299" Offset="0"/>
        <GradientStop Color="#FF608299" Offset="1"/>
    </LinearGradientBrush>
	
    <LinearGradientBrush x:Key="DataGridHeaderSortedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF608299" Offset="0"/>
        <GradientStop Color="#FF608299" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DisabledHeaderBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF596770" Offset="0"/>
        <GradientStop Color="#FF596770" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DisabledHeaderBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF596770" Offset="0"/>
        <GradientStop Color="#FF596770" Offset="1"/>
    </LinearGradientBrush>
	
    <SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="HeaderForegroundMouseOverBrush" Color="#FFF6F6F6" />
    <SolidColorBrush x:Key="HeaderForegroundSortedBrush" Color="#FFF6F6F6"/>
    <SolidColorBrush x:Key="DisabledHeaderForegroundBrush" Color="#FF3F4549"/>
	
    <SolidColorBrush x:Key="DataGridValidationForegroundBrush" Color="Red" />
    <SolidColorBrush x:Key="DataGridValidationBackgroundBrush" Color="Transparent" />

    <LinearGradientBrush x:Key="XXXDataGridHeaderSortedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#B58801" Offset="0" />
        <GradientStop Color="#681900" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="RowHeaderBackgroundBrush" Color="#FF656565" />
    <SolidColorBrush x:Key="RowHeaderIsMouseOverBrush" Color="#FF656565" />

    <SolidColorBrush x:Key="DataGridLinesBrush" Color="#00FF0000" />
	<SolidColorBrush x:Key="RowBackgroundBrush" Color="#FF3D4144" />
    <LinearGradientBrush x:Key="RowBackgroundAlternateBrush" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
        <GradientStop Color="#FF363A3D" Offset="0"/>
        <GradientStop Color="#FF363A3D" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RowBackgroundMouseOverBrush" Color="#FF56626A" />

    <LinearGradientBrush x:Key="RowBackgroundSelectedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#AA4D5F6C" Offset="0"/>
        <GradientStop Color="#FF4D5F6C" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="RowForegroundBrush" Color="#FFF6F6F6"/>
    <SolidColorBrush x:Key="RowForegroundMouseOverBrush" Color="#FFE5D29B" />
    <SolidColorBrush x:Key="RowForegroundSelectedBrush" Color="#FFE4C56E"/>
    <SolidColorBrush x:Key="DisabledRowForegroundBrush" Color="#FF909090"/>

    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

    <!-- DataGridColumnHeader Right Gripper Style -->
    <Style x:Key="ColumnHeaderRightGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- DataGridColumnHeader Left Gripper Style -->
    <Style x:Key="ColumnHeaderLeftGripperStyle" 
		   BasedOn="{StaticResource ColumnHeaderRightGripperStyle}" 
		   TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="Border"
							Padding="{TemplateBinding Padding}" 
							Background="{TemplateBinding Background}">
                        <Canvas>
                            <Line RenderOptions.EdgeMode="Aliased" Stroke="#88B0E4"
								  X1="7" Y1="{Binding ElementName=Border, Path=ActualHeight}"
								  X2="7" Y2="0"/>
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
		<Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border 
              x:Name="DGR_Border"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              SnapsToDevicePixels="True">
                        <DataGridCellsPresenter 
                   ItemsPanel="{TemplateBinding ItemsPanel}"
                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <!--<SelectiveScrollingGrid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <DataGridCellsPresenter 
                   Grid.Column="1"
                   ItemsPanel="{TemplateBinding ItemsPanel}"
                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                           <DataGridRowHeader x:Name="RowHeader"
                  SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"  
                  Grid.RowSpan="2"
                  Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                               Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
							   ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
                            <Grid Grid.Column="1" Grid.Row="1" Name="Details" Visibility="Collapsed" >
                                <DataGridDetailsPresenter />
                            </Grid>
                        </SelectiveScrollingGrid>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True" >
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Red" ShadowDepth="0" BlurRadius="20" />
                                </Setter.Value>

                            </Setter>
                            <Setter Property="BorderThickness" Value="3" />
                            <Setter Property="BorderBrush" Value="Red" />
                            <Setter Property="Foreground" Value="Blue" />
                            <Setter Property="FontSize" Value="16" />
                            <!--<Setter Property="Background" TargetName="RowHeader" Value="Red" />-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource RowBackgroundMouseOverBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource RowForegroundMouseOverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <!--<Setter TargetName="Details" Property="Visibility" Value="Collapsed" />-->
                            <Setter Property="Background" Value="{StaticResource RowBackgroundSelectedBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource RowForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledRowForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Have this style inherit from BasedOn="{StaticResource DataGridRowStyle}" 
    to get some more agressive Error notification  (bright, ugly reds :) 
    -->
    <Style x:Key="DataGridDemoRowStyle" 
              
   TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <!--
			<Trigger Property="AlternationIndex" Value="2" >
                <Setter Property="Background" Value="{StaticResource RowBackgroundAlternationIndex2Brush}" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="3">
                <Setter Property="Background" Value="{StaticResource RowBackgroundAlternationIndex3Brush}" />
            </Trigger>
			
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RowBackgroundMouseOverBrush}" />
                <Setter Property="Foreground" Value="{StaticResource RowForegroundMouseOverBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{StaticResource RowBackgroundSelectedBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource RowForegroundBrush}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledRowForegroundBrush}"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <!-- Unchanged from generic.xaml. Included here just to avoid Implicit style reference to some external resource  -->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGridColumnHeader -->
    <Style x:Key="DatagridColumnHeaderCustomTemplateStyle" 
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" BorderThickness="0,1,1,1" 
                                Background="{StaticResource DataGridHeaderBackgroundBrush}" 
                                BorderBrush="{StaticResource DataGridHeaderBorderBrush}" 
                                Grid.ColumnSpan="2" />
                        <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                        <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                              Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" 
                              VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                        <Rectangle Width="0" Fill="#FFFFC377" HorizontalAlignment="Right" Grid.ColumnSpan="2" />
						
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" 
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" 
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource DisabledHeaderBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource DisabledHeaderBorderBrush}" />
							<Setter Property="Foreground" Value="{StaticResource DisabledHeaderForegroundBrush}"/>
                        </Trigger>				
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="BackgroundBorder" Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="BackgroundBorder" Value="{StaticResource DataGridHeaderMouseOverBorderBrush}" />
							<Setter Property="Foreground" Value="{StaticResource HeaderForegroundMouseOverBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource DataGridHeaderSortedBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource DataGridHeaderSortedBorderBrush}" />
							<Setter Property="Foreground" Value="{StaticResource HeaderForegroundSortedBrush}"/>
                       		<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
  							<Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource DataGridHeaderSortedBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource DataGridHeaderSortedBorderBrush}" />
							<Setter Property="Foreground" Value="{StaticResource HeaderForegroundSortedBrush}"/>						
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" 
                                    TargetName="PART_LeftHeaderGripper"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                  Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="DataGridRowHeaderWMaxHeightStyle" TargetType="{x:Type DataGridRowHeader}">-->

    <DrawingBrush x:Key="ErrorTemplateBrush" Viewbox="0,0,19,16.234" ViewboxUnits="Absolute" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.ClipGeometry>
                        <RectangleGeometry Rect="0,0,19,15.013"/>
                    </DrawingGroup.ClipGeometry>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,0,1.221"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFFF0000" Geometry="M1.5264391E-07,15.013 C1.5264391E-07,15.013 11.278179,-0.92248435 15.061861,0.04208698 18.845545,1.0066585 14.340995,3.5782006 14.340995,3.5782006 L0.93643624,14.266332 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,2.832,1.183"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFFF0000" Geometry="M0.021026401,0.27456573 C-0.46293162,1.5475728 7.5269286,11.804318 11.647909,14.61601 13.792494,16.079233 7.2223001,5.5069748 6.8034332,5.5069748 6.3845662,5.5069748 0.67633722,-1.4491695 0.021026401,0.27456573 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,10.032,2.432"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFAB0404" Geometry="M5.7970878E-08,4.6522207 C5.7970878E-08,4.6522207 1.6666358,2.7735222 3.4580226,1.5508175 8.0168866,-1.5608194 6.1352206,0.97192629 6.1352206,0.97192629 L0.50724209,5.3830004 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,0.287,8.6"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFAB0404" Geometry="M1.0157332,6.2297077 C1.0157332,6.2297077 4.4261989,2.8647916 6.179524,1.3212826 9.1318492,-1.2777427 8.2156135,0.75924876 8.2156135,0.75924876 L-5.2486112E-08,7.3609995 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,2.815,1.686"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFAB0404" Geometry="M1.2093127,3.1798115 C1.2093127,3.1798115 -0.0013252577,2.3808527 2.2497043E-06,0.019419075 0.00022756806,-0.38130763 4.3080003,5.5527674 4.3080003,5.5527674 L3.8011218,6.059 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,7.841,8.657"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFAB0404" Geometry="M0.68956735,1.51963 C0.68956735,1.51963 -0.93421078,0.24505694 0.80170192,0.0003053632 1.191087,-0.054595244 6.912,7.3039992 6.912,7.3039992 L5.2266264,5.9695358 z"/>
                </DrawingGroup>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <ControlTemplate x:Key="ErrorTemplate2">
        <Grid  MinWidth="20" MinHeight="20" ToolTip="{Binding}">
            <Rectangle Fill="{StaticResource ErrorTemplateBrush}" >
            </Rectangle>
        </Grid>
    </ControlTemplate>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource Focus}" />
		<Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="Transparent" 
                  BorderBrush="{TemplateBinding BorderBrush}"  
                  BorderThickness="0" 
                  SnapsToDevicePixels="True">
                        <ContentPresenter 
						VerticalAlignment="Bottom"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
					<ControlTemplate.Triggers>
					<Trigger Property="IsSelected" Value="true">
                    	<Setter Property="Foreground" Value="{StaticResource RowForegroundSelectedBrush}" />
                    </Trigger>
					</ControlTemplate.Triggers>					
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="RowDetailsTemplate">
        <Grid TextBlock.Foreground="White">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock Text="RowDetails Go here"  Grid.Row="0"/>
            <TextBlock Text="{Binding }" Grid.Row="1"/>
        </Grid>
    </DataTemplate>

       <Style x:Key="DataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="AlternatingRowBackground" Value="{StaticResource RowBackgroundAlternateBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DataGridBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource DataGridBackgroundBrush}" />
        <Setter Property="RowBackground" Value="{StaticResource RowBackgroundBrush}" />
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridLinesBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridLinesBrush}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="RowDetailsTemplate" Value="{StaticResource RowDetailsTemplate}" />
    <!--<Setter Property="RowValidationErrorTemplate" Value="{StaticResource ErrorTemplate2}" />-->
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DatagridColumnHeaderCustomTemplateStyle}" />
		<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="EnableRowVirtualization" Value="True" />
		<Setter Property="EnableColumnVirtualization" Value="True" />		
		<Setter Property="IsReadOnly" Value="True" />
        <Setter Property="ColumnHeaderHeight" Value="18" />
		<Setter Property="RowHeight" Value="18" />
		<Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="EnableColumnVirtualization" Value="True" />
        <Setter Property="AlternationCount" Value="2" />
    	<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
    	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type DataGrid}">
    				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
    					<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
    						<ScrollViewer.Template>
    							<ControlTemplate TargetType="{x:Type ScrollViewer}">
    								<Grid>
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition Width="Auto"/>
    										<ColumnDefinition Width="*"/>
    										<ColumnDefinition Width="Auto"/>
    									</Grid.ColumnDefinitions>
    									<Grid.RowDefinitions>
    										<RowDefinition Height="Auto"/>
    										<RowDefinition Height="*"/>
    										<RowDefinition Height="Auto"/>
    									</Grid.RowDefinitions>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" 
										Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
										Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
										RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
    									<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
										CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
    									<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" 
										Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" 
										Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
										Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
										ViewportSize="{TemplateBinding ViewportHeight}"
										Style="{DynamicResource ScrollBar}"/>
    									<Grid Grid.Column="1" Grid.Row="2">
    										<Grid.ColumnDefinitions>
    											<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
    											<ColumnDefinition Width="*"/>
    										</Grid.ColumnDefinitions>
    										<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"
											Style="{DynamicResource ScrollBar}"/>
    									</Grid>
    								</Grid>
    							</ControlTemplate>
    						</ScrollViewer.Template>
    						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    					</ScrollViewer>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Style.Triggers>
    		<Trigger Property="IsGrouping" Value="true">
    			<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    		</Trigger>
    	</Style.Triggers>
    </Style>

    <Style x:Key="ShortlistCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="Bd" 
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="0,0,0,0"
							CornerRadius="2,2,2,2">
                        <ContentPresenter 
							Content="{TemplateBinding Content}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							Margin="{TemplateBinding Padding}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource CheckBoxPressedGradientBrush}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource CheckBoxPressedGradientBorder}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource CheckBoxMouseOverGradientBrush}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource CheckBoxMouseOverGradientBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource CheckBoxSelectedForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
</ResourceDictionary>